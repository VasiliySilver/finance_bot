from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from bot.utils.states import TransactionStates
from bot.keyboards.reply import get_transaction_type_keyboard, get_main_keyboard
from bot.database.repository import Repository
from bot.database.base import get_session
from aiogram.utils.keyboard import InlineKeyboardBuilder

router = Router()

@router.callback_query(F.data == "add_transaction")
async def start_transaction(callback: CallbackQuery, state: FSMContext):
    await state.set_state(TransactionStates.choosing_type)
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏:",
        reply_markup=get_transaction_type_keyboard()
    )

@router.callback_query(TransactionStates.choosing_type)
async def process_transaction_type(callback: CallbackQuery, state: FSMContext):
    if callback.data in ["income", "expense"]:
        await state.update_data(transaction_type=callback.data)
        await state.set_state(TransactionStates.entering_amount)
        await callback.message.edit_text(
            "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –æ–ø–µ—Ä–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ):"
        )

@router.message(TransactionStates.entering_amount)
async def process_amount(message: Message, state: FSMContext):
    try:
        amount = float(message.text)
        await state.update_data(amount=amount)
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏
        data = await state.get_data()
        categories = get_categories_keyboard(data["transaction_type"])
        
        await state.set_state(TransactionStates.choosing_category)
        await message.answer(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
            reply_markup=categories
        )
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")

# –î–æ–±–∞–≤–∏–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
def get_categories_keyboard(transaction_type: str):
    builder = InlineKeyboardBuilder()
    
    categories = {
        "income": ["–ó–∞—Ä–ø–ª–∞—Ç–∞", "–ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞", "–ü—Ä–æ—Ü–µ–Ω—Ç—ã", "–î—Ä—É–≥–æ–µ"],
        "expense": ["–ü—Ä–æ–¥—É–∫—Ç—ã", "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "–ñ–∏–ª—å–µ", "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "–î—Ä—É–≥–æ–µ"]
    }
    
    for category in categories[transaction_type]:
        builder.button(text=category, callback_data=f"category_{category}")
    
    builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")
    builder.adjust(2)
    return builder.as_markup() 

@router.callback_query(TransactionStates.choosing_category)
async def process_category(callback: CallbackQuery, state: FSMContext):
    category = callback.data.replace('category_', '')
    await state.update_data(category=category)
    
    await state.set_state(TransactionStates.entering_description)
    await callback.message.edit_text(
        "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '-' —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å):"
    )

@router.message(TransactionStates.entering_description)
async def process_description(message: Message, state: FSMContext):
    description = None if message.text == '-' else message.text
    data = await state.get_data()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ –ë–î
    async for session in get_session():
        repo = Repository(session)
        user = await repo.get_or_create_user(
            message.from_user.id,
            message.from_user.username
        )
        
        transaction = await repo.add_transaction(
            user_id=user.id,
            type=data['transaction_type'],
            category=data['category'],
            amount=data['amount'],
            description=description
        )
    
    await state.clear()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    transaction_type = "–¥–æ—Ö–æ–¥" if data['transaction_type'] == 'income' else "—Ä–∞—Å—Ö–æ–¥"
    await message.answer(
        f"‚úÖ {transaction_type.capitalize()} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n\n"
        f"–°—É–º–º–∞: {data['amount']} —Ä—É–±.\n"
        f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {data['category']}\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ: {description or '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}",
        reply_markup=get_main_keyboard()
    )

@router.callback_query(F.data == "balance")
async def show_balance(callback: CallbackQuery):
    async for session in get_session():
        repo = Repository(session)
        user = await repo.get_or_create_user(
            callback.from_user.id,
            callback.from_user.username
        )
        balance = await repo.get_balance(user.id)
    
    await callback.message.edit_text(
        f"üí∞ –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance:.2f} —Ä—É–±.",
        reply_markup=get_main_keyboard()
    ) 